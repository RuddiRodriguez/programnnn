function [resx,resy,Piter1,time_analysis1,time_analysis2] = imat_method_router(imati,background,rsimg,y,picno,userpar)



METHOD=imati.analysis.method;

%METHOD=-1

upperonhill=imati.cutting.upperonhill;
loweronhill=imati.cutting.loweronhill;
SMAX=imati.analysis.smax;

[n m]=size(y);
nm=n*m;
[N M]=size(rsimg);
if nm>0
    Randv1=0; Randx1=0; Randy1=0; Piter1=0;
    Randv2=0; Randx2=0; Randy2=0; Piter2=0;
    if sum(METHOD==[-1 2 3 4  5 7])==1
        % Method need a grid
        [Randv1,Randx1,Randy1]=imat_gridsampling(imati,background,rsimg,y);                       
        if METHOD==5
            [Randv2,Randx2,Randy2]=imat_gridsampling(imati,background,rsimg,y);
        end
        pause(0.2);
        if imati.analysis.unfold==1
            %% 2D methods
            Piter1=prod(size(Randx1)); 
            Piter2=prod(size(Randx2));
        else
            %% 1D methods uses SMAX
            pp=size(y);
            qq=find((Randv1>2*SMAX).*(Randv1<pp(2)-2*SMAX));
            Randv1=Randv1(qq);
            Piter1=prod(size(Randv1));
            Piter2=prod(size(Randv2));
        end      
    else
        Piter1=1;
    end
else
    Piter1=1;
end
time_analysis1=clock;
if Piter1>0 
    if METHOD==-1
        %===========================================================
        % Test of Hjelmen and Huangs bisection algorithm
        % Use a sinus curve generated by the lines:
        %         y=xsinusimg(100,100,100,1.0)+100;
        %         imwrite(uint8(y),'sinf.tif')
        % Use parameters:
        % Randv1=[2040]
        % sout=100
        % 
        x=1:N*M;
        [s_c,ang,sdv_c,mdx,mdy,dummy_c]=amt_dll0(x',y',SMAX,1,Piter1,1,1,N*M,Randv1);
        resy=[(ang')*(180/pi) mdy' ];
        resx=1:(2*imati.analysis.smax+2);
        
    end
    if METHOD==1
        % NONE !!!!!!!!!!!!!!    
    end
    if METHOD==2
        [ang,mdy,mdx]=imatm_amt_bom(y',SMAX,1,Piter1,nm,Randv1',0,0);
        resy=[(ang')*(180/pi) mdy' ];
        resx=1:(2*imati.analysis.smax+2);
    end
    if METHOD==3
        x=1:N*M;
        [ang,mdy,mdx]=imatm_amt_andrlePWL(y',Randv1',Piter1,SMAX,nm,0);
        resy=[ang'*(180/pi) mdy' mdx'];
        resx=1:3*imati.analysis.smax+3;
    end
    if METHOD==4
        [ang,mdy,mdx]=imatm_amt_andrlePWL(y',Randv1',Piter1,SMAX,nm,1);
        resy=[ang'*(180/pi) mdy' mdx'];
        resx=1:3*imati.analysis.smax+3;
    end
    if METHOD==5
        y=reshape(y,1,N*M);
        if isempty(upperonhill)
            upperonhill=300;
        end
        if isempty(loweronhill)
            loweronhill=0;
        end        
        [ang]=imatm_amt_2dSQ(y',N,M,loweronhill,upperonhill,Piter1,Piter2,Randx1,Randy1,Randx2,Randy2);
        resy=[ang'*(180/pi)];
        resx=1:size(resy,2);
    end               
    if METHOD==6
        [resy,dd]=imhist(uint8(y));              
        resy=resy';
        resx=1:size(resy,2);
    end               
    if METHOD==7
        %        [sizex,sizey,p]=imatm_starvol(rsimg,N,M,hill_cutoff_off,hill_cutoff_on,Piter1,Randx1,Randy1);        
        [sizex,sizey,p]=imatm_starvol(reshape(rsimg,1,N*M),N,M,loweronhill,upperonhill,Piter1,Randx1,Randy1);        
        resy=[sizex' sizey'];
        resx=1:size(resy,2);
    end
    if METHOD==8        
        [area,border]=imatm_geometer(y,userpar);        
        resy=[area,border];
        resx=1:size(resy,2);
    end                     
    if METHOD==9        
        [resx,resy]=imatm_logabsfft2(y,N,M);
    end    
    if METHOD==10
        [resx,resy]=imatm_pfft2(y,N,M);
    end    
    if METHOD==11
        resy=imatm_geodesic(y,userpar);        
        resx=1:size(resy,2);    
    end    
    if METHOD==12
        [resy,resx]=imatm_boxcountingdimension(y,userpar);        
    end
    if METHOD==13
        [resy,resx]=imatm_boxcountingdimension3d(y,userpar);        
    end
    
end
if Piter1==0 
    resy=zeros(1,imati.analysis.smax*2+2);
    resx=zeros(1,imati.analysis.smax*2+2);
end
time_analysis2=clock;
